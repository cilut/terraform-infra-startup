trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Update the values below to match your environment
  storage_account_name: "sadevffstate"
  resource_group_name: "rg_auxiliar"
  key_vault_name: "kvdevfastexx"
  location: "eastus"
  tfstate_container_name: "sadevffstate"
  tfstate_file_name: "terraform.tfstate"

steps:

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: Install Terraform
  inputs:
    terraformVersion: "1.4.0"
- task: AzureKeyVault@1
  inputs:
    azureSubscription: GeneralConnection
    KeyVaultName: $(key_vault_name)
    SecretsFilter: 'storageAccountKey'
  displayName: 'Retrieve Storage Account Access Key'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'GeneralConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob download --account-name $(storage_account_name) --account-key $(storageAccountKey) --container-name $(tfstate_container_name) --name $(tfstate_file_name) --file $(Build.SourcesDirectory)/$(tfstate_file_name)
      ls 
    
  displayName: 'Initialize Terraform workspace with existing tfstate file'
- task: AzureCLI@2
  inputs:
    azureSubscription: 'GeneralConnection'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      cd $(System.DefaultWorkingDirectory)/terraform
      terraform init -upgrade\
        -backend-config="storage_account_name=$(storage_account_name)" \
        -backend-config="container_name=$(tfstate_container_name)" \
        -backend-config="key=$(tfstate_file_name)" \
        -backend-config="access_key=$(storageAccountKey)"
      terraform destroy -auto-approve
  
